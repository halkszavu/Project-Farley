<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApi.API</name>
    </assembly>
    <members>
        <member name="M:WebApi.API.Controllers.MeetingController.#ctor(WebApi.Bll.Services.IMeetingService,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="service">IMeetingService service for the layer below</param>
            <param name="cartographer">IMapper mapping the Bll and DAL layers</param>
        </member>
        <member name="M:WebApi.API.Controllers.MeetingController.GetAsync">
            <summary>
            Gets all the meetings (Meeting entities) from the database
            </summary>
            <returns>List of Meetings</returns>
        </member>
        <member name="M:WebApi.API.Controllers.MeetingController.GetAsync(System.Int32)">
            <summary>
            Gets a meeting from the DB
            </summary>
            <param name="id">Integer meetingId</param>
            <returns>Meeting instance</returns>
        </member>
        <member name="M:WebApi.API.Controllers.MeetingController.PutAsync(System.Int32,WebApi.Bll.Dtos.Meeting)">
            <summary>
            Updates the meeting in the id position
            </summary>
            <param name="id">Integer meetingId</param>
            <param name="meeting">Meeting to update to</param>
        </member>
        <member name="M:WebApi.API.Controllers.MeetingController.Post(System.Int32,WebApi.Bll.Dtos.Meeting)">
            <summary>
            Creates a meeting with the person
            </summary>
            <param name="personId">The personId for the meeting attendee</param>
            <param name="meeting">The meeting</param>
            <returns></returns>
        </member>
        <member name="M:WebApi.API.Controllers.NoteController.#ctor(WebApi.Bll.Services.INoteService,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="service">INoteService service for the layer below</param>
            <param name="cartographer">IMapper mapping the Bll and DAL layers</param>
        </member>
        <member name="M:WebApi.API.Controllers.NoteController.GetAsync(System.Int32)">
            <summary>
            Gets a specified Note with the specified person
            </summary>
            <param name="id">Integer personId</param>
            <returns>The node associated with the person</returns>
        </member>
        <member name="M:WebApi.API.Controllers.NoteController.PostAsync(System.Int32,WebApi.Bll.Dtos.Note)">
            <summary>
            Inserts a Note to the specified Person
            </summary>
            <param name="personId">Integer personId</param>
            <param name="note">The note for the person specified</param>
        </member>
        <member name="M:WebApi.API.Controllers.NoteController.PutAsync(System.Int32,WebApi.Bll.Dtos.Note)">
            <summary>
            Updates the Note to the specified Person
            </summary>
            <param name="personId">Integer personId</param>
            <param name="note">The updated note</param>
        </member>
        <member name="T:WebApi.API.Controllers.PeopleController">
            <summary>
            API Controller for multiple person entities in the database, gets and sets via IPersonService, using json
            </summary>
        </member>
        <member name="M:WebApi.API.Controllers.PeopleController.#ctor(WebApi.Bll.Services.IPersonService,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="service">IPersonService service for the layer below</param>
            <param name="cartographer">IMapper mapping the Bll and DAL layers</param>
        </member>
        <member name="M:WebApi.API.Controllers.PeopleController.GetAsync">
            <summary>
            Gets all the people (Person entities) from the database
            </summary>
            <returns>List of Persons</returns>
        </member>
        <member name="M:WebApi.API.Controllers.PeopleController.GetAsync(System.String)">
            <summary>
            Returns a list of person whose name contains the name required
            </summary>
            <param name="name">The name or partial name of the people to get</param>
            <returns>List of person</returns>
        </member>
        <member name="T:WebApi.API.Controllers.PersonController">
            <summary>
            API Controller for single person entities in the database, gets and sets via IPersonService, using json
            </summary>
        </member>
        <member name="M:WebApi.API.Controllers.PersonController.#ctor(WebApi.Bll.Services.IPersonService,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="service">IPersonService service for the layer below</param>
            <param name="cartographer">IMapper mapping the Bll and DAL layers</param>
        </member>
        <member name="M:WebApi.API.Controllers.PersonController.GetAsync(System.Int32)">
            <summary>
            Gets a person from the DB by Id
            </summary>
            <param name="id">Integer personId</param>
            <returns>Person instance</returns>
        </member>
        <member name="M:WebApi.API.Controllers.PersonController.GetAsync(System.String)">
            <summary>
            Gets a person from the DB by name (if their name contains the name, it will return the first person it found)
            </summary>
            <param name="name">Name or part of the name of the person</param>
            <returns>Person instance</returns>
        </member>
        <member name="M:WebApi.API.Controllers.PersonController.PostAsync(WebApi.Entities.Person)">
            <summary>
            Inserts a new person into the database
            </summary>
            <param name="person"></param>
            <returns>Person to insert into the database</returns>
        </member>
        <member name="M:WebApi.API.Controllers.PersonController.ForcePostAsync(WebApi.Entities.Person)">
            <summary>
            Inserts a new person into the database, even if a person with the same name exists.
            </summary>
            <param name="person"></param>
            <returns>Person to insert into the database</returns>
        </member>
        <member name="M:WebApi.API.Controllers.PersonController.PutAsync(System.Int32,WebApi.Entities.Person)">
            <summary>
            Updates an existing person in the id position
            </summary>
            <param name="id">Integer personId</param>
            <param name="person">Person to update to</param>
        </member>
    </members>
</doc>
